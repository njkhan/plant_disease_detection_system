{"ast":null,"code":"var _jsxFileName = \"/Users/nasrinjahan/Desktop/Indivisual Project/Project_NK/machineLearning_PlantDiseaseDetectionSystem/Plant_Diseases_Dataset/Frontend/src/home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Typography, Avatar, Container, Card, CardContent, Paper, Grid, Button, CircularProgress, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, CardMedia, CardActionArea, Snackbar } from \"@mui/material\"; // Update imports here\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport logo from \"./logo.png\";\nimport image from \"./plant.jpeg\";\nimport { Clear } from '@material-ui/icons';\nimport { common } from '@material-ui/core/colors';\nimport axios from \"axios\";\nimport Alert from '@mui/material/Alert'; // Update import for Alert\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(common.white),\n    backgroundColor: common.white,\n    '&:hover': {\n      backgroundColor: '#ffffff7a'\n    }\n  }\n}))(Button);\n_c = ColorButton;\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1\n  },\n  clearButton: {\n    width: \"100%\",\n    borderRadius: \"15px\",\n    padding: \"15px 22px\",\n    color: \"#000000a6\",\n    fontSize: \"20px\",\n    fontWeight: 900\n  },\n  media: {\n    height: 400\n  },\n  gridContainer: {\n    justifyContent: \"center\",\n    padding: \"4em 1em 0 1em\"\n  },\n  mainContainer: {\n    backgroundImage: `url(${image})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    height: \"93vh\",\n    marginTop: \"8px\"\n  },\n  imageCard: {\n    margin: \"auto\",\n    maxWidth: 400,\n    height: 500,\n    backgroundColor: 'transparent',\n    boxShadow: '0px 9px 70px 0px rgb(0 0 0 / 30%) !important',\n    borderRadius: '15px'\n  },\n  imageCardEmpty: {\n    height: 'auto'\n  },\n  tableCell: {\n    fontSize: '22px',\n    backgroundColor: 'transparent !important',\n    borderColor: 'transparent !important',\n    color: '#000000a6 !important',\n    fontWeight: 'bolder',\n    padding: '1px 24px 1px 16px'\n  },\n  loader: {\n    color: '#be6a77 !important'\n  },\n  detail: {\n    backgroundColor: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  appbar: {\n    background: '#be6a77',\n    boxShadow: 'none',\n    color: 'white'\n  },\n  snackbar: {\n    position: 'absolute',\n    bottom: 20,\n    left: '50%',\n    transform: 'translateX(-50%)'\n  }\n}));\nexport const ImageUpload = () => {\n  _s();\n  const classes = useStyles();\n  const [file, setFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [predictionData, setPredictionData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isImageSelected, setIsImageSelected] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [severity, setSeverity] = useState(\"info\");\n\n  // Handle file selection and preview update\n  const handleFileSelection = files => {\n    if (!files || files.length === 0) {\n      resetState();\n      return;\n    }\n    const selectedFile = files[0];\n    setFile(selectedFile);\n    setIsImageSelected(true);\n    setPredictionData(null); // Reset prediction data when new file is selected\n  };\n\n  // Generate preview URL for the selected image\n  useEffect(() => {\n    if (!file) return;\n    const fileUrl = URL.createObjectURL(file);\n    setPreview(fileUrl);\n  }, [file]);\n\n  // Send the selected file to API for prediction\n  const sendFileToAPI = async () => {\n    if (!isImageSelected) return;\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(process.env.REACT_APP_API_URL, formData);\n      if (response.status === 200) {\n        setPredictionData(response.data);\n        setSnackbarMessage(\"Prediction successful!\");\n        setSeverity(\"success\");\n        setOpenSnackbar(true);\n      }\n    } catch (error) {\n      console.error(\"Error uploading file: \", error);\n      setSnackbarMessage(\"Failed to process the image.\");\n      setSeverity(\"error\");\n      setOpenSnackbar(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Trigger the API call when preview is available\n  useEffect(() => {\n    if (!preview) return;\n    setIsLoading(true);\n    sendFileToAPI();\n  }, [preview]);\n\n  // Reset state\n  const resetState = () => {\n    setFile(null);\n    setPreview(null);\n    setPredictionData(null);\n    setIsImageSelected(false);\n  };\n\n  // Clear result data\n  const clearPredictionData = () => {\n    setPredictionData(null);\n    setFile(null);\n    setPreview(null);\n    setIsImageSelected(false);\n  };\n  const confidence = predictionData ? (parseFloat(predictionData.confidence) * 100).toFixed(2) : 0;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      className: classes.appbar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Plant Disease Detection System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.grow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          src: logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      className: classes.mainContainer,\n      disableGutters: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.gridContainer,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: `${classes.imageCard} ${!isImageSelected ? classes.imageCardEmpty : ''}`,\n            children: [isImageSelected ? /*#__PURE__*/_jsxDEV(CardActionArea, {\n              children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                className: classes.media,\n                image: preview,\n                component: \"img\",\n                title: \"Uploaded Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(DropzoneArea, {\n                acceptedFiles: ['image/*'],\n                dropzoneText: \"Drag and drop an image of a potato plant leaf to process\",\n                onChange: handleFileSelection\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), predictionData && /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.detail,\n              children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                component: Paper,\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  size: \"small\",\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        className: classes.tableCell,\n                        children: \"Label:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 197,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        className: classes.tableCell,\n                        children: \"Confidence:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: predictionData.class\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: [confidence, \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 204,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), isLoading && /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.detail,\n              children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                color: \"secondary\",\n                className: classes.loader\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Processing...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), predictionData && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(ColorButton, {\n            variant: \"contained\",\n            className: classes.clearButton,\n            onClick: clearPredictionData,\n            startIcon: /*#__PURE__*/_jsxDEV(Clear, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 121\n            }, this),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: () => setOpenSnackbar(false),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      className: classes.snackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setOpenSnackbar(false),\n        severity: severity,\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"Dovy9TleTSybM4zLO+siCJiedrQ=\", false, function () {\n  return [useStyles];\n});\n_c2 = ImageUpload;\nexport default ImageUpload;\nvar _c, _c2;\n$RefreshReg$(_c, \"ColorButton\");\n$RefreshReg$(_c2, \"ImageUpload\");","map":{"version":3,"names":["React","useState","useEffect","makeStyles","withStyles","AppBar","Toolbar","Typography","Avatar","Container","Card","CardContent","Paper","Grid","Button","CircularProgress","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","CardMedia","CardActionArea","Snackbar","DropzoneArea","logo","image","Clear","common","axios","Alert","jsxDEV","_jsxDEV","ColorButton","theme","root","color","palette","getContrastText","white","backgroundColor","_c","useStyles","grow","flexGrow","clearButton","width","borderRadius","padding","fontSize","fontWeight","media","height","gridContainer","justifyContent","mainContainer","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","marginTop","imageCard","margin","maxWidth","boxShadow","imageCardEmpty","tableCell","borderColor","loader","detail","display","flexDirection","alignItems","appbar","background","snackbar","position","bottom","left","transform","ImageUpload","_s","classes","file","setFile","preview","setPreview","predictionData","setPredictionData","isLoading","setIsLoading","isImageSelected","setIsImageSelected","snackbarMessage","setSnackbarMessage","openSnackbar","setOpenSnackbar","severity","setSeverity","handleFileSelection","files","length","resetState","selectedFile","fileUrl","URL","createObjectURL","sendFileToAPI","formData","FormData","append","response","post","process","env","REACT_APP_API_URL","status","data","error","console","clearPredictionData","confidence","parseFloat","toFixed","Fragment","children","className","variant","noWrap","fileName","_jsxFileName","lineNumber","columnNumber","src","disableGutters","container","spacing","item","xs","component","title","acceptedFiles","dropzoneText","onChange","size","align","class","onClick","startIcon","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","_c2","$RefreshReg$"],"sources":["/Users/nasrinjahan/Desktop/Indivisual Project/Project_NK/machineLearning_PlantDiseaseDetectionSystem/Plant_Diseases_Dataset/Frontend/src/home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Typography, Avatar, Container, Card, CardContent, Paper, Grid, Button, CircularProgress, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, CardMedia, CardActionArea, Snackbar } from \"@mui/material\"; // Update imports here\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport logo from \"./logo.png\";\nimport image from \"./plant.jpeg\";\nimport { Clear } from '@material-ui/icons';\nimport { common } from '@material-ui/core/colors';\nimport axios from \"axios\";\nimport Alert from '@mui/material/Alert';  // Update import for Alert\n\nconst ColorButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(common.white),\n    backgroundColor: common.white,\n    '&:hover': {\n      backgroundColor: '#ffffff7a',\n    },\n  },\n}))(Button);\n\nconst useStyles = makeStyles((theme) => ({\n  grow: { flexGrow: 1 },\n  clearButton: {\n    width: \"100%\",\n    borderRadius: \"15px\",\n    padding: \"15px 22px\",\n    color: \"#000000a6\",\n    fontSize: \"20px\",\n    fontWeight: 900,\n  },\n  media: { height: 400 },\n  gridContainer: {\n    justifyContent: \"center\",\n    padding: \"4em 1em 0 1em\",\n  },\n  mainContainer: {\n    backgroundImage: `url(${image})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    height: \"93vh\",\n    marginTop: \"8px\",\n  },\n  imageCard: {\n    margin: \"auto\",\n    maxWidth: 400,\n    height: 500,\n    backgroundColor: 'transparent',\n    boxShadow: '0px 9px 70px 0px rgb(0 0 0 / 30%) !important',\n    borderRadius: '15px',\n  },\n  imageCardEmpty: { height: 'auto' },\n  tableCell: {\n    fontSize: '22px',\n    backgroundColor: 'transparent !important',\n    borderColor: 'transparent !important',\n    color: '#000000a6 !important',\n    fontWeight: 'bolder',\n    padding: '1px 24px 1px 16px',\n  },\n  loader: { color: '#be6a77 !important' },\n  detail: {\n    backgroundColor: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  appbar: {\n    background: '#be6a77',\n    boxShadow: 'none',\n    color: 'white',\n  },\n  snackbar: {\n    position: 'absolute',\n    bottom: 20,\n    left: '50%',\n    transform: 'translateX(-50%)',\n  }\n}));\n\nexport const ImageUpload = () => {\n  const classes = useStyles();\n  const [file, setFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [predictionData, setPredictionData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isImageSelected, setIsImageSelected] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [severity, setSeverity] = useState(\"info\");\n\n  // Handle file selection and preview update\n  const handleFileSelection = (files) => {\n    if (!files || files.length === 0) {\n      resetState();\n      return;\n    }\n    const selectedFile = files[0];\n    setFile(selectedFile);\n    setIsImageSelected(true);\n    setPredictionData(null);  // Reset prediction data when new file is selected\n  };\n\n  // Generate preview URL for the selected image\n  useEffect(() => {\n    if (!file) return;\n    const fileUrl = URL.createObjectURL(file);\n    setPreview(fileUrl);\n  }, [file]);\n\n  // Send the selected file to API for prediction\n  const sendFileToAPI = async () => {\n    if (!isImageSelected) return;\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(process.env.REACT_APP_API_URL, formData);\n      if (response.status === 200) {\n        setPredictionData(response.data);\n        setSnackbarMessage(\"Prediction successful!\");\n        setSeverity(\"success\");\n        setOpenSnackbar(true);\n      }\n    } catch (error) {\n      console.error(\"Error uploading file: \", error);\n      setSnackbarMessage(\"Failed to process the image.\");\n      setSeverity(\"error\");\n      setOpenSnackbar(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Trigger the API call when preview is available\n  useEffect(() => {\n    if (!preview) return;\n    setIsLoading(true);\n    sendFileToAPI();\n  }, [preview]);\n\n  // Reset state\n  const resetState = () => {\n    setFile(null);\n    setPreview(null);\n    setPredictionData(null);\n    setIsImageSelected(false);\n  };\n\n  // Clear result data\n  const clearPredictionData = () => {\n    setPredictionData(null);\n    setFile(null);\n    setPreview(null);\n    setIsImageSelected(false);\n  };\n\n  const confidence = predictionData ? (parseFloat(predictionData.confidence) * 100).toFixed(2) : 0;\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\" className={classes.appbar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            Plant Disease Detection System\n          </Typography>\n          <div className={classes.grow} />\n          <Avatar src={logo} />\n        </Toolbar>\n      </AppBar>\n\n      <Container maxWidth={false} className={classes.mainContainer} disableGutters>\n        <Grid container className={classes.gridContainer} justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n          <Grid item xs={12}>\n            <Card className={`${classes.imageCard} ${!isImageSelected ? classes.imageCardEmpty : ''}`}>\n              {isImageSelected ? (\n                <CardActionArea>\n                  <CardMedia className={classes.media} image={preview} component=\"img\" title=\"Uploaded Image\" />\n                </CardActionArea>\n              ) : (\n                <CardContent>\n                  <DropzoneArea\n                    acceptedFiles={['image/*']}\n                    dropzoneText=\"Drag and drop an image of a potato plant leaf to process\"\n                    onChange={handleFileSelection}\n                  />\n                </CardContent>\n              )}\n\n              {predictionData && (\n                <CardContent className={classes.detail}>\n                  <TableContainer component={Paper}>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell className={classes.tableCell}>Label:</TableCell>\n                          <TableCell align=\"right\" className={classes.tableCell}>Confidence:</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <TableRow>\n                          <TableCell>{predictionData.class}</TableCell>\n                          <TableCell align=\"right\">{confidence}%</TableCell>\n                        </TableRow>\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </CardContent>\n              )}\n\n              {isLoading && (\n                <CardContent className={classes.detail}>\n                  <CircularProgress color=\"secondary\" className={classes.loader} />\n                  <Typography variant=\"h6\">Processing...</Typography>\n                </CardContent>\n              )}\n            </Card>\n          </Grid>\n\n          {predictionData && (\n            <Grid item>\n              <ColorButton variant=\"contained\" className={classes.clearButton} onClick={clearPredictionData} startIcon={<Clear fontSize=\"large\" />}>\n                Clear\n              </ColorButton>\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n\n      {/* Snackbar for success/error messages */}\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={() => setOpenSnackbar(false)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        className={classes.snackbar}\n      >\n        <Alert onClose={() => setOpenSnackbar(false)} severity={severity}>\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </React.Fragment>\n  );\n};\n\nexport default ImageUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,UAAU,QAAQ,0BAA0B;AACjE,SAASC,MAAM,EAAEC,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAEC,SAAS,EAAEC,IAAI,EAAEC,WAAW,EAAEC,KAAK,EAAEC,IAAI,EAAEC,MAAM,EAAEC,gBAAgB,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,cAAc,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,cAAc,EAAEC,QAAQ,QAAQ,eAAe,CAAC,CAAC;AACjP,SAASC,YAAY,QAAQ,sBAAsB;AACnD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,MAAM,cAAc;AAChC,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,SAASC,MAAM,QAAQ,0BAA0B;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,qBAAqB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAG9B,UAAU,CAAE+B,KAAK,KAAM;EACzCC,IAAI,EAAE;IACJC,KAAK,EAAEF,KAAK,CAACG,OAAO,CAACC,eAAe,CAACV,MAAM,CAACW,KAAK,CAAC;IAClDC,eAAe,EAAEZ,MAAM,CAACW,KAAK;IAC7B,SAAS,EAAE;MACTC,eAAe,EAAE;IACnB;EACF;AACF,CAAC,CAAC,CAAC,CAAC3B,MAAM,CAAC;AAAC4B,EAAA,GARNR,WAAW;AAUjB,MAAMS,SAAS,GAAGxC,UAAU,CAAEgC,KAAK,KAAM;EACvCS,IAAI,EAAE;IAAEC,QAAQ,EAAE;EAAE,CAAC;EACrBC,WAAW,EAAE;IACXC,KAAK,EAAE,MAAM;IACbC,YAAY,EAAE,MAAM;IACpBC,OAAO,EAAE,WAAW;IACpBZ,KAAK,EAAE,WAAW;IAClBa,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE;EACd,CAAC;EACDC,KAAK,EAAE;IAAEC,MAAM,EAAE;EAAI,CAAC;EACtBC,aAAa,EAAE;IACbC,cAAc,EAAE,QAAQ;IACxBN,OAAO,EAAE;EACX,CAAC;EACDO,aAAa,EAAE;IACbC,eAAe,EAAE,OAAO9B,KAAK,GAAG;IAChC+B,gBAAgB,EAAE,WAAW;IAC7BC,kBAAkB,EAAE,QAAQ;IAC5BC,cAAc,EAAE,OAAO;IACvBP,MAAM,EAAE,MAAM;IACdQ,SAAS,EAAE;EACb,CAAC;EACDC,SAAS,EAAE;IACTC,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE,GAAG;IACbX,MAAM,EAAE,GAAG;IACXZ,eAAe,EAAE,aAAa;IAC9BwB,SAAS,EAAE,8CAA8C;IACzDjB,YAAY,EAAE;EAChB,CAAC;EACDkB,cAAc,EAAE;IAAEb,MAAM,EAAE;EAAO,CAAC;EAClCc,SAAS,EAAE;IACTjB,QAAQ,EAAE,MAAM;IAChBT,eAAe,EAAE,wBAAwB;IACzC2B,WAAW,EAAE,wBAAwB;IACrC/B,KAAK,EAAE,sBAAsB;IAC7Bc,UAAU,EAAE,QAAQ;IACpBF,OAAO,EAAE;EACX,CAAC;EACDoB,MAAM,EAAE;IAAEhC,KAAK,EAAE;EAAqB,CAAC;EACvCiC,MAAM,EAAE;IACN7B,eAAe,EAAE,OAAO;IACxB8B,OAAO,EAAE,MAAM;IACfhB,cAAc,EAAE,QAAQ;IACxBiB,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE;EACd,CAAC;EACDC,MAAM,EAAE;IACNC,UAAU,EAAE,SAAS;IACrBV,SAAS,EAAE,MAAM;IACjB5B,KAAK,EAAE;EACT,CAAC;EACDuC,QAAQ,EAAE;IACRC,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE,KAAK;IACXC,SAAS,EAAE;EACb;AACF,CAAC,CAAC,CAAC;AAEH,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,OAAO,GAAGxC,SAAS,CAAC,CAAC;EAC3B,MAAM,CAACyC,IAAI,EAAEC,OAAO,CAAC,GAAGpF,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACqF,OAAO,EAAEC,UAAU,CAAC,GAAGtF,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuF,cAAc,EAAEC,iBAAiB,CAAC,GAAGxF,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACyF,SAAS,EAAEC,YAAY,CAAC,GAAG1F,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC2F,eAAe,EAAEC,kBAAkB,CAAC,GAAG5F,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC6F,eAAe,EAAEC,kBAAkB,CAAC,GAAG9F,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC+F,YAAY,EAAEC,eAAe,CAAC,GAAGhG,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACiG,QAAQ,EAAEC,WAAW,CAAC,GAAGlG,QAAQ,CAAC,MAAM,CAAC;;EAEhD;EACA,MAAMmG,mBAAmB,GAAIC,KAAK,IAAK;IACrC,IAAI,CAACA,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MAChCC,UAAU,CAAC,CAAC;MACZ;IACF;IACA,MAAMC,YAAY,GAAGH,KAAK,CAAC,CAAC,CAAC;IAC7BhB,OAAO,CAACmB,YAAY,CAAC;IACrBX,kBAAkB,CAAC,IAAI,CAAC;IACxBJ,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAE;EAC5B,CAAC;;EAED;EACAvF,SAAS,CAAC,MAAM;IACd,IAAI,CAACkF,IAAI,EAAE;IACX,MAAMqB,OAAO,GAAGC,GAAG,CAACC,eAAe,CAACvB,IAAI,CAAC;IACzCG,UAAU,CAACkB,OAAO,CAAC;EACrB,CAAC,EAAE,CAACrB,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMwB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAAChB,eAAe,EAAE;IACtB,MAAMiB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE3B,IAAI,CAAC;IAC7B,IAAI;MACF,MAAM4B,QAAQ,GAAG,MAAMlF,KAAK,CAACmF,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAEP,QAAQ,CAAC;MAC1E,IAAIG,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QAC3B5B,iBAAiB,CAACuB,QAAQ,CAACM,IAAI,CAAC;QAChCvB,kBAAkB,CAAC,wBAAwB,CAAC;QAC5CI,WAAW,CAAC,SAAS,CAAC;QACtBF,eAAe,CAAC,IAAI,CAAC;MACvB;IACF,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CxB,kBAAkB,CAAC,8BAA8B,CAAC;MAClDI,WAAW,CAAC,OAAO,CAAC;MACpBF,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,SAAS;MACRN,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACAzF,SAAS,CAAC,MAAM;IACd,IAAI,CAACoF,OAAO,EAAE;IACdK,YAAY,CAAC,IAAI,CAAC;IAClBiB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACtB,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMiB,UAAU,GAAGA,CAAA,KAAM;IACvBlB,OAAO,CAAC,IAAI,CAAC;IACbE,UAAU,CAAC,IAAI,CAAC;IAChBE,iBAAiB,CAAC,IAAI,CAAC;IACvBI,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;;EAED;EACA,MAAM4B,mBAAmB,GAAGA,CAAA,KAAM;IAChChC,iBAAiB,CAAC,IAAI,CAAC;IACvBJ,OAAO,CAAC,IAAI,CAAC;IACbE,UAAU,CAAC,IAAI,CAAC;IAChBM,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAM6B,UAAU,GAAGlC,cAAc,GAAG,CAACmC,UAAU,CAACnC,cAAc,CAACkC,UAAU,CAAC,GAAG,GAAG,EAAEE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;EAEhG,oBACE3F,OAAA,CAACjC,KAAK,CAAC6H,QAAQ;IAAAC,QAAA,gBACb7F,OAAA,CAAC5B,MAAM;MAACwE,QAAQ,EAAC,QAAQ;MAACkD,SAAS,EAAE5C,OAAO,CAACT,MAAO;MAAAoD,QAAA,eAClD7F,OAAA,CAAC3B,OAAO;QAAAwH,QAAA,gBACN7F,OAAA,CAAC1B,UAAU;UAACyH,OAAO,EAAC,IAAI;UAACC,MAAM;UAAAH,QAAA,EAAC;QAEhC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbpG,OAAA;UAAK8F,SAAS,EAAE5C,OAAO,CAACvC;QAAK;UAAAsF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChCpG,OAAA,CAACzB,MAAM;UAAC8H,GAAG,EAAE5G;QAAK;UAAAwG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAETpG,OAAA,CAACxB,SAAS;MAACuD,QAAQ,EAAE,KAAM;MAAC+D,SAAS,EAAE5C,OAAO,CAAC3B,aAAc;MAAC+E,cAAc;MAAAT,QAAA,eAC1E7F,OAAA,CAACpB,IAAI;QAAC2H,SAAS;QAACT,SAAS,EAAE5C,OAAO,CAAC7B,aAAc;QAACC,cAAc,EAAC,QAAQ;QAACkB,UAAU,EAAC,QAAQ;QAACgE,OAAO,EAAE,CAAE;QAAAX,QAAA,gBACvG7F,OAAA,CAACpB,IAAI;UAAC6H,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAb,QAAA,eAChB7F,OAAA,CAACvB,IAAI;YAACqH,SAAS,EAAE,GAAG5C,OAAO,CAACrB,SAAS,IAAI,CAAC8B,eAAe,GAAGT,OAAO,CAACjB,cAAc,GAAG,EAAE,EAAG;YAAA4D,QAAA,GACvFlC,eAAe,gBACd3D,OAAA,CAACV,cAAc;cAAAuG,QAAA,eACb7F,OAAA,CAACX,SAAS;gBAACyG,SAAS,EAAE5C,OAAO,CAAC/B,KAAM;gBAACzB,KAAK,EAAE2D,OAAQ;gBAACsD,SAAS,EAAC,KAAK;gBAACC,KAAK,EAAC;cAAgB;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChF,CAAC,gBAEjBpG,OAAA,CAACtB,WAAW;cAAAmH,QAAA,eACV7F,OAAA,CAACR,YAAY;gBACXqH,aAAa,EAAE,CAAC,SAAS,CAAE;gBAC3BC,YAAY,EAAC,0DAA0D;gBACvEC,QAAQ,EAAE5C;cAAoB;gBAAA8B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACS,CACd,EAEA7C,cAAc,iBACbvD,OAAA,CAACtB,WAAW;cAACoH,SAAS,EAAE5C,OAAO,CAACb,MAAO;cAAAwD,QAAA,eACrC7F,OAAA,CAACd,cAAc;gBAACyH,SAAS,EAAEhI,KAAM;gBAAAkH,QAAA,eAC/B7F,OAAA,CAACjB,KAAK;kBAACiI,IAAI,EAAC,OAAO;kBAAAnB,QAAA,gBACjB7F,OAAA,CAACb,SAAS;oBAAA0G,QAAA,eACR7F,OAAA,CAACZ,QAAQ;sBAAAyG,QAAA,gBACP7F,OAAA,CAACf,SAAS;wBAAC6G,SAAS,EAAE5C,OAAO,CAAChB,SAAU;wBAAA2D,QAAA,EAAC;sBAAM;wBAAAI,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAW,CAAC,eAC3DpG,OAAA,CAACf,SAAS;wBAACgI,KAAK,EAAC,OAAO;wBAACnB,SAAS,EAAE5C,OAAO,CAAChB,SAAU;wBAAA2D,QAAA,EAAC;sBAAW;wBAAAI,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAW,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACtE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACF,CAAC,eACZpG,OAAA,CAAChB,SAAS;oBAAA6G,QAAA,eACR7F,OAAA,CAACZ,QAAQ;sBAAAyG,QAAA,gBACP7F,OAAA,CAACf,SAAS;wBAAA4G,QAAA,EAAEtC,cAAc,CAAC2D;sBAAK;wBAAAjB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAY,CAAC,eAC7CpG,OAAA,CAACf,SAAS;wBAACgI,KAAK,EAAC,OAAO;wBAAApB,QAAA,GAAEJ,UAAU,EAAC,GAAC;sBAAA;wBAAAQ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAW,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC1C;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACF,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACP;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CACd,EAEA3C,SAAS,iBACRzD,OAAA,CAACtB,WAAW;cAACoH,SAAS,EAAE5C,OAAO,CAACb,MAAO;cAAAwD,QAAA,gBACrC7F,OAAA,CAAClB,gBAAgB;gBAACsB,KAAK,EAAC,WAAW;gBAAC0F,SAAS,EAAE5C,OAAO,CAACd;cAAO;gBAAA6D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACjEpG,OAAA,CAAC1B,UAAU;gBAACyH,OAAO,EAAC,IAAI;gBAAAF,QAAA,EAAC;cAAa;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CACd;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAEN7C,cAAc,iBACbvD,OAAA,CAACpB,IAAI;UAAC6H,IAAI;UAAAZ,QAAA,eACR7F,OAAA,CAACC,WAAW;YAAC8F,OAAO,EAAC,WAAW;YAACD,SAAS,EAAE5C,OAAO,CAACrC,WAAY;YAACsG,OAAO,EAAE3B,mBAAoB;YAAC4B,SAAS,eAAEpH,OAAA,CAACL,KAAK;cAACsB,QAAQ,EAAC;YAAO;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAAAP,QAAA,EAAC;UAEtI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CACP;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGZpG,OAAA,CAACT,QAAQ;MACP8H,IAAI,EAAEtD,YAAa;MACnBuD,gBAAgB,EAAE,IAAK;MACvBC,OAAO,EAAEA,CAAA,KAAMvD,eAAe,CAAC,KAAK,CAAE;MACtCwD,YAAY,EAAE;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAC3D5B,SAAS,EAAE5C,OAAO,CAACP,QAAS;MAAAkD,QAAA,eAE5B7F,OAAA,CAACF,KAAK;QAACyH,OAAO,EAAEA,CAAA,KAAMvD,eAAe,CAAC,KAAK,CAAE;QAACC,QAAQ,EAAEA,QAAS;QAAA4B,QAAA,EAC9DhC;MAAe;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAErB,CAAC;AAACnD,EAAA,CAlKWD,WAAW;EAAA,QACNtC,SAAS;AAAA;AAAAiH,GAAA,GADd3E,WAAW;AAoKxB,eAAeA,WAAW;AAAC,IAAAvC,EAAA,EAAAkH,GAAA;AAAAC,YAAA,CAAAnH,EAAA;AAAAmH,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}